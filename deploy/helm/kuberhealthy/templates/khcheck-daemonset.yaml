{{- if .Values.check.daemonset.enabled }}
---
apiVersion: comcast.github.io/v1
kind: KuberhealthyCheck
metadata:
  name: daemonset
  namespace: {{ .Release.Namespace }}
spec:
  runInterval:  {{ .Values.check.daemonset.runInterval }}
  timeout: {{ .Values.check.daemonset.timeout }}
  podSpec:
    {{- if .Values.check.daemonset.serviceAccountName }}
    serviceAccountName: {{ .Values.check.daemonset.serviceAccountName }}
    {{- end}}
    {{- if .Values.securityContext.enabled }}
    securityContext:
      runAsUser: {{ .Values.securityContext.runAsUser }}
      fsGroup: {{ .Values.securityContext.fsGroup }}
    {{- end}}
    containers:
      - env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CHECK_POD_TIMEOUT
            value: "10m"
{{- range $key, $value := .Values.check.daemonset.extraEnvs }}
          - name: {{ $key }}
            value: {{ $value | quote }}
{{- end }}
        {{- if .Values.imageRegistry }}
        image: {{- .Values.imageRegistry }}/{{ .Values.check.daemonset.image.repository }}:{{ .Values.check.daemonset.image.tag }}
        {{- else if .Values.check.daemonset.image.registry }}
        image: {{ .Values.check.daemonset.image.registry }}/{{ .Values.check.daemonset.image.repository }}:{{ .Values.check.daemonset.image.tag }}
        {{- else }}
        image: {{ .Values.check.daemonset.image.repository }}:{{ .Values.check.daemonset.image.tag }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        name: main
        resources:
          requests:
            cpu: {{ .Values.check.daemonset.resources.requests.cpu }}
            memory: {{ .Values.check.daemonset.resources.requests.memory }}
          {{- if .Values.check.daemonset.resources.limits }}
          limits:
            {{- if .Values.check.daemonset.resources.limits.cpu }}
            cpu: {{ .Values.check.daemonset.resources.limits.cpu }}
            {{- end }}
            {{- if .Values.check.daemonset.resources.limits.memory }}
            memory: {{ .Values.check.daemonset.resources.limits.memory }}
            {{- end }}
          {{- end }}
        {{- if .Values.securityContext.enabled }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.securityContext.readOnlyRootFilesystem }}
        {{- end}}
    {{- if .Values.check.daemonset.nodeSelector }}
    nodeSelector:
{{- toYaml .Values.check.daemonset.nodeSelector | nindent 6 }}
    {{- end }}
    {{- if .Values.check.daemonset.tolerations }}
    tolerations:
{{- toYaml .Values.check.daemonset.tolerations | nindent 6 }}
    {{- end }}
    serviceAccountName: daemonset-khcheck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: daemonset-khcheck
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ds-admin
subjects:
  - kind: ServiceAccount
    name: daemonset-khcheck
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ds-admin
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
      - extensions
      - apps
    resources:
      - daemonsets
      - pods
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: daemonset-khcheck
  namespace: {{ .Release.Namespace }}
{{- end }}
