{{- if .Values.check.storage.enabled }}
{{- $name := include "kuberhealthy.name" . -}}
{{- range .Values.check.storage.storageClass }}
---
apiVersion: comcast.github.io/v1
kind: KuberhealthyCheck
metadata:
  name: storage-check-{{ . | default "default" }}
  namespace: {{ $.Release.Namespace }}
spec:
  runInterval: {{ $.Values.check.storage.runInterval }}
  timeout: {{ $.Values.check.storage.timeout }}
  podSpec:
    {{- if $.Values.securityContext.enabled }}
    securityContext:
      runAsUser: {{ $.Values.securityContext.runAsUser }}
      fsGroup: {{ $.Values.securityContext.fsGroup }}
    {{- end }}
    containers:
    - name: main
      image: {{ $.Values.check.storage.image.repository }}:{{ $.Values.check.storage.image.tag }}
      imagePullPolicy: IfNotPresent
      env:
{{- if ne . "" }}
        - name: CHECK_STORAGE_PVC_STORAGE_CLASS_NAME
          value: {{ . }}
        - name: CHECK_STORAGE_NAME
          value: storage-check-pvc-{{ . }}
        - name: CHECK_STORAGE_INIT_JOB_NAME
          value: storage-check-init-job-{{ . }}
        - name: CHECK_STORAGE_JOB_NAME
          value: storage-check-job-{{ . }}
{{- end }}
{{- range $key, $value := $.Values.check.storage.extraEnvs }}
        - name: {{ $key }}
          value: {{ $value | quote }}
{{- end }}
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
        {{- if $.Values.securityContext.enabled }}
        securityContext:
          allowPrivilegeEscalation: {{ $.Values.securityContext.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ $.Values.securityContext.readOnlyRootFilesystem }}
        {{- end }}
    restartPolicy: Never
    serviceAccountName: storage-khcheck
    {{- if $.Values.check.storage.nodeSelector }}
    nodeSelector:
{{- toYaml $.Values.check.storage.nodeSelector | nindent 6 }}
    {{- end }}
{{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: storage-khcheck-role
  namespace: {{ .Release.Namespace }}
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - "batch"
      - "extensions"
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: storage-khcheck-cr
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: storage-khcheck-crb
roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: storage-khcheck-cr
subjects:
  - kind: ServiceAccount
    name: storage-khcheck
    namespace: kuberhealthy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: storage-khcheck-rb
  namespace: {{ .Release.Namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: storage-khcheck-role
subjects:
  - kind: ServiceAccount
    name: storage-khcheck
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: storage-khcheck
  namespace: {{ .Release.Namespace }}
{{- end }}
