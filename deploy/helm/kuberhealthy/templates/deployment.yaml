---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kuberhealthy.name" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "kuberhealthy.name" . }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "kuberhealthy.name" . }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.maxSurge }}
      maxUnavailable: {{ .Values.deployment.maxUnavailable }}
    type: RollingUpdate
  template:
    metadata:
      {{- if .Values.deployment.podAnnotations }}
      annotations:
      {{- range $key, $value := .Values.deployment.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app: {{ template "kuberhealthy.name" . }}
    spec:
      serviceAccountName: kuberhealthy
      automountServiceAccountToken: true
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        command: {{ .Values.deployment.command }}
        {{- if .Values.deployment.args }}
        args:
{{ toYaml .Values.deployment.args | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.securityContext.runAsUser }}
          allowPrivilegeEscalation: {{ .Values.securityContext.allowPrivilegeEscalation }}
        imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name: {{ template "kuberhealthy.name" . }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: LISTEN_ADDRESS
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: listenAddress
          - name: ENABLE_FORCE_MASTER
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: enableForceMaster
          - name: ENABLE_DEBUG
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: enableDebug
          - name: LOG_LEVEL
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: logLevel
          - name: INFLUX_USERNAME
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: influxUsername
          - name: INFLUX_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: influxPassword
          - name: INFLUX_URL
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: influxURL
          - name: INFLUX_DB
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: influxDB
          - name: ENABLE_INFLUX
            valueFrom:
              configMapKeyRef:
                name: KuberhealthyConfigMap
                key: enableInflux
          {{- if .Values.deployment.env.KH_EXTERNAL_REPORTING_URL }}
          - name: KH_EXTERNAL_REPORTING_URL
            value: {{ .Values.deployment.env.KH_EXTERNAL_REPORTING_URL }}
          {{- end }}
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
      {{- if .Values.deployment.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.deployment.nodeSelector | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
{{- if .Values.tolerations.master }}
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
        operator: Exists
{{- end -}}
