---
# Source: kuberhealthy/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuberhealthy

---
# Source: kuberhealthy/templates/customresourcedefinition.yaml
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: khstates.comcast.github.io
spec:
  group: comcast.github.io
  version: v1
  scope: Namespaced
  names:
    plural: khstates
    singular: khstate
    kind: KuberhealthyState
    shortNames:
    - khs

---
# Source: kuberhealthy/templates/clusterrole.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRole
metadata:
  name: kuberhealthy
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    - componentstatuses
    - nodes
    verbs:
    - get
    - list
    - watch
  

---
# Source: kuberhealthy/templates/clusterrolebinding.yaml
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: ClusterRoleBinding
metadata:
  name: kuberhealthy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuberhealthy
subjects:
- kind: ServiceAccount
  name: kuberhealthy
  namespace: kube-system
  

---
# Source: kuberhealthy/templates/role.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: Role
metadata:
  name: kuberhealthy
rules:
  - apiGroups:
    - apps
    resources:
    - daemonsets
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - comcast.github.io
    resources:
    - khstates
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list

---
# Source: kuberhealthy/templates/rolebinding.yaml
apiVersion: "rbac.authorization.k8s.io/v1"
kind: RoleBinding
metadata:
  name: kuberhealthy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuberhealthy
subjects:
- kind: ServiceAccount
  name: kuberhealthy

---
# Source: kuberhealthy/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kuberhealthy
  name: kuberhealthy
spec:
  type: ClusterIP
  ports:
  - port: 80
    name: http
    targetPort: 8080
  selector:
    app: kuberhealthy

---
# Source: kuberhealthy/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuberhealthy
  labels:
    app: kuberhealthy
    chart: kuberhealthy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: kuberhealthy
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kuberhealthy
        chart: kuberhealthy
    spec:
      serviceAccountName: kuberhealthy
      automountServiceAccountToken: true
      containers:
      - image: quay.io/comcast/kuberhealthy:v1.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name:  kuberhealthy
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 2
          periodSeconds: 4
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 80Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 310
---
# Source: kuberhealthy/templates/poddisruptionbudget.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name:  kuberhealthy-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: kuberhealthy
      chart: kuberhealthy

---
# Source: kuberhealthy/templates/configmap.yaml

---
# Source: kuberhealthy/templates/servicemonitor.yaml

