# Default values for kuberhealthy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

checkReaper:
  jobCleanupDuration: 15m # the maximum age of khjobs before being reaped
  maxCheckPods: 4 # the maximum number of check pods in Completed state before being reaped

stateMetadata:
  ClusterName: "my-cluster-name"
  ClusterVersion: "1.24"

prometheus:
  enabled: false
  name: "prometheus"
  serviceMonitor:
    enabled: false
    release: prometheus-operator
    endpoints:
      interval: 15s
      bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
  prometheusRule:
    enabled: false
    release: prometheus-operator

image:
  registry: kuberhealthy
  repository: kuberhealthy
  tag: latest

resources:
  requests:
    cpu: 400m
    memory: 300Mi
  limits:
    cpu: 800m
    memory: 600Mi

tolerations:
  # change to true to tolerate and deploy to masters
  master: false

deployment:
  replicas: 1
  maxSurge: 0
  maxUnavailable: 1
  imagePullPolicy: IfNotPresent
  nodeSelector: {}
  podAnnotations: {}
  env: {}
  command:
  - /app/kuberhealthy
  args:
  - "--debug"

securityContext:
  runAsNonRoot: true
  runAsUser: 999
  allowPrivilegeEscalation: false

# Please remember that changing the service type to LoadBalancer
# will expose Kuberhealthy to the internet, which could cause
# error messages shown by Kuberhealthy to be exposed to the
# public internet.  It is recommended to create the service
# with ClusterIP, then to manually edit the service in order to
# securely expose the port in an appropriate way for your
# specific environment.
service:
  externalPort: 80
  type: ClusterIP
  annotations: {}

check:
  daemonset:
    enabled: true
    runInterval: 20m
    timeout: 12m
    image:
      registry: kuberhealthy
      repository: daemonset-check
      tag: v3.3.0
    extraEnvs:
    nodeSelector: {}
  deployment:
    enabled: true
    runInterval: 20m
    timeout: 15m
    image:
      registry: kuberhealthy
      repository: deployment-check
      tag: v1.9.0
    extraEnvs:
      CHECK_DEPLOYMENT_REPLICAS: "4"
      CHECK_DEPLOYMENT_ROLLING_UPDATE: "true"
      DEBUG: "true"
    nodeSelector: {}
  dnsInternal:
    enabled: true
    runInterval: 20m
    timeout: 15m
    image:
      registry: kuberhealthy
      repository: dns-resolution-check
      tag: v1.5.0
    extraEnvs:
      HOSTNAME: "kubernetes.default"
    nodeSelector: {}
  podRestarts:
    enabled: true
    runInterval: 20m
    timeout: 10m
    image:
      registry: kuberhealthy
      repository: pod-restarts-check
      tag: v2.5.0
    extraEnvs:
      MAX_FAILURES_ALLOWED: "10"
    nodeSelector: {}
  podStatus:
    enabled: true
    runInterval: 20m
    timeout: 15m
    image:
      registry: kuberhealthy
      repository: pod-status-check
      tag: v1.3.0
    extraEnvs:
    nodeSelector: {}

