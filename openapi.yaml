openapi: 3.0.0
info:
  title: Kuberhealthy API
  version: "0.1.0"
servers:
  - url: /
paths:
  /metrics:
    get:
      summary: Retrieve Prometheus metrics for checks
      responses:
        '200':
          description: Metrics in Prometheus format
          content:
            text/plain:
              schema:
                type: string
  /healthz:
    get:
      summary: Quick health check
      responses:
        '200':
          description: Service is healthy
          content:
            text/plain:
              schema:
                type: string
                example: OK
        '503':
          description: Dependencies unavailable
  /json:
    get:
      summary: Get current status of all checks
      parameters:
        - in: query
          name: namespace
          schema:
            type: string
          description: Comma-separated namespaces to filter by
      responses:
        '200':
          description: Health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
  /api/events:
    get:
      summary: List Kubernetes events for a check
      parameters:
        - in: query
          name: namespace
          required: true
          schema:
            type: string
        - in: query
          name: khcheck
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Event list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventSummary'
        '400':
          description: Missing parameters
  /api/logs:
    get:
      summary: Retrieve logs for a checker pod
      parameters:
        - in: query
          name: namespace
          required: true
          schema:
            type: string
        - in: query
          name: khcheck
          required: true
          schema:
            type: string
        - in: query
          name: pod
          required: true
          schema:
            type: string
        - in: query
          name: format
          required: true
          schema:
            type: string
            enum: [text]
      responses:
        '200':
          description: Pod logs
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Missing parameters
        '406':
          description: Unsupported format
  /api/logs/stream:
    get:
      summary: Stream logs for a running checker pod
      parameters:
        - in: query
          name: namespace
          required: true
          schema:
            type: string
        - in: query
          name: khcheck
          required: true
          schema:
            type: string
        - in: query
          name: pod
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Streaming pod logs
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Missing parameters
        '409':
          description: Pod not running
  /openapi.yaml:
    get:
      summary: Get OpenAPI specification
      responses:
        '200':
          description: OpenAPI specification in JSON
          content:
            application/json:
              schema:
                type: object
  /openapi.json:
    get:
      summary: Get OpenAPI specification
      responses:
        '200':
          description: OpenAPI specification in JSON
          content:
            application/json:
              schema:
                type: object
  /api/run:
    post:
      summary: Trigger an immediate healthcheck run
      parameters:
        - in: query
          name: namespace
          required: true
          schema:
            type: string
        - in: query
          name: healthcheck
          required: true
          schema:
            type: string
          description: Name of the healthcheck to run (legacy `khcheck` alias also accepted).
      responses:
        '202':
          description: Run started
        '400':
          description: Missing parameters
        '404':
          description: Check not found
        '409':
          description: Check already running
  /api/convert:
    post:
      summary: Convert legacy v1 KuberhealthyCheck resources to v2 healthcheck objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdmissionReview'
      responses:
        '200':
          description: AdmissionReview with conversion patch
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdmissionReview'
  /api/khjobconvert:
    post:
      summary: Convert legacy KuberhealthyJob resources to v2 healthcheck objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionReview'
      responses:
        '200':
          description: ConversionReview with converted checks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionReview'
  /check:
    post:
      summary: Report an external check result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: Report accepted
        '400':
          description: Invalid report
  /:
    get:
      summary: HTML status page
      responses:
        '200':
          description: Status page
          content:
            text/html:
              schema:
                type: string
    post:
      summary: Report an external check result (legacy)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report'
      responses:
        '200':
          description: Report accepted
        '400':
          description: Invalid report
components:
  schemas:
    State:
      type: object
      properties:
        ok:
          type: boolean
        errors:
          type: array
          items:
            type: string
        checkDetails:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CheckStatus'
        metadata:
          type: object
          additionalProperties:
            type: string
      required:
        - ok
        - errors
        - checkDetails
    CheckStatus:
      type: object
      properties:
        ok:
          type: boolean
        errors:
          type: array
          items:
            type: string
        runDuration:
          type: string
          description: Execution time of the last run
        namespace:
          type: string
        podName:
          type: string
        currentUUID:
          type: string
        lastRunUnix:
          type: integer
          format: int64
        additionalMetadata:
          type: string
      required:
        - ok
    Report:
      type: object
      properties:
        errors:
          type: array
          items:
            type: string
        ok:
          type: boolean
      required:
        - ok
    AdmissionReview:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        request:
          type: object
        response:
          type: object
    ConversionReview:
      type: object
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        request:
          type: object
        response:
          type: object
    EventSummary:
      type: object
      properties:
        message:
          type: string
        reason:
          type: string
        type:
          type: string
        lastTimestamp:
          type: integer
          format: int64
      required:
        - message
        - reason
        - type
