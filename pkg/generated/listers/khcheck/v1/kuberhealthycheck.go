// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kuberhealthy/kuberhealthy/v2/pkg/apis/khcheck/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KuberhealthyCheckLister helps list KuberhealthyChecks.
// All objects returned here must be treated as read-only.
type KuberhealthyCheckLister interface {
	// List lists all KuberhealthyChecks in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyCheck, err error)
	// KuberhealthyChecks returns an object that can list and get KuberhealthyChecks.
	KuberhealthyChecks(namespace string) KuberhealthyCheckNamespaceLister
	KuberhealthyCheckListerExpansion
}

// kuberhealthyCheckLister implements the KuberhealthyCheckLister interface.
type kuberhealthyCheckLister struct {
	indexer cache.Indexer
}

// NewKuberhealthyCheckLister returns a new KuberhealthyCheckLister.
func NewKuberhealthyCheckLister(indexer cache.Indexer) KuberhealthyCheckLister {
	return &kuberhealthyCheckLister{indexer: indexer}
}

// List lists all KuberhealthyChecks in the indexer.
func (s *kuberhealthyCheckLister) List(selector labels.Selector) (ret []*v1.KuberhealthyCheck, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyCheck))
	})
	return ret, err
}

// KuberhealthyChecks returns an object that can list and get KuberhealthyChecks.
func (s *kuberhealthyCheckLister) KuberhealthyChecks(namespace string) KuberhealthyCheckNamespaceLister {
	return kuberhealthyCheckNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KuberhealthyCheckNamespaceLister helps list and get KuberhealthyChecks.
// All objects returned here must be treated as read-only.
type KuberhealthyCheckNamespaceLister interface {
	// List lists all KuberhealthyChecks in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyCheck, err error)
	// Get retrieves the KuberhealthyCheck from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KuberhealthyCheck, error)
	KuberhealthyCheckNamespaceListerExpansion
}

// kuberhealthyCheckNamespaceLister implements the KuberhealthyCheckNamespaceLister
// interface.
type kuberhealthyCheckNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KuberhealthyChecks in the indexer for a given namespace.
func (s kuberhealthyCheckNamespaceLister) List(selector labels.Selector) (ret []*v1.KuberhealthyCheck, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyCheck))
	})
	return ret, err
}

// Get retrieves the KuberhealthyCheck from the indexer for a given namespace and name.
func (s kuberhealthyCheckNamespaceLister) Get(name string) (*v1.KuberhealthyCheck, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kuberhealthycheck"), name)
	}
	return obj.(*v1.KuberhealthyCheck), nil
}
