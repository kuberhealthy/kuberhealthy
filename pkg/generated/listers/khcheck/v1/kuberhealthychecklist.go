// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kuberhealthy/kuberhealthy/v2/pkg/apis/khcheck/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KuberhealthyCheckListLister helps list KuberhealthyCheckLists.
// All objects returned here must be treated as read-only.
type KuberhealthyCheckListLister interface {
	// List lists all KuberhealthyCheckLists in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyCheckList, err error)
	// KuberhealthyCheckLists returns an object that can list and get KuberhealthyCheckLists.
	KuberhealthyCheckLists(namespace string) KuberhealthyCheckListNamespaceLister
	KuberhealthyCheckListListerExpansion
}

// kuberhealthyCheckListLister implements the KuberhealthyCheckListLister interface.
type kuberhealthyCheckListLister struct {
	indexer cache.Indexer
}

// NewKuberhealthyCheckListLister returns a new KuberhealthyCheckListLister.
func NewKuberhealthyCheckListLister(indexer cache.Indexer) KuberhealthyCheckListLister {
	return &kuberhealthyCheckListLister{indexer: indexer}
}

// List lists all KuberhealthyCheckLists in the indexer.
func (s *kuberhealthyCheckListLister) List(selector labels.Selector) (ret []*v1.KuberhealthyCheckList, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyCheckList))
	})
	return ret, err
}

// KuberhealthyCheckLists returns an object that can list and get KuberhealthyCheckLists.
func (s *kuberhealthyCheckListLister) KuberhealthyCheckLists(namespace string) KuberhealthyCheckListNamespaceLister {
	return kuberhealthyCheckListNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KuberhealthyCheckListNamespaceLister helps list and get KuberhealthyCheckLists.
// All objects returned here must be treated as read-only.
type KuberhealthyCheckListNamespaceLister interface {
	// List lists all KuberhealthyCheckLists in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyCheckList, err error)
	// Get retrieves the KuberhealthyCheckList from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KuberhealthyCheckList, error)
	KuberhealthyCheckListNamespaceListerExpansion
}

// kuberhealthyCheckListNamespaceLister implements the KuberhealthyCheckListNamespaceLister
// interface.
type kuberhealthyCheckListNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KuberhealthyCheckLists in the indexer for a given namespace.
func (s kuberhealthyCheckListNamespaceLister) List(selector labels.Selector) (ret []*v1.KuberhealthyCheckList, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyCheckList))
	})
	return ret, err
}

// Get retrieves the KuberhealthyCheckList from the indexer for a given namespace and name.
func (s kuberhealthyCheckListNamespaceLister) Get(name string) (*v1.KuberhealthyCheckList, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kuberhealthychecklist"), name)
	}
	return obj.(*v1.KuberhealthyCheckList), nil
}
