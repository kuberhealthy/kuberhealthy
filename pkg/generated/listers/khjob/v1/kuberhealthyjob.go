// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/kuberhealthy/kuberhealthy/v2/pkg/apis/khjob/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KuberhealthyJobLister helps list KuberhealthyJobs.
// All objects returned here must be treated as read-only.
type KuberhealthyJobLister interface {
	// List lists all KuberhealthyJobs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyJob, err error)
	// KuberhealthyJobs returns an object that can list and get KuberhealthyJobs.
	KuberhealthyJobs(namespace string) KuberhealthyJobNamespaceLister
	KuberhealthyJobListerExpansion
}

// kuberhealthyJobLister implements the KuberhealthyJobLister interface.
type kuberhealthyJobLister struct {
	indexer cache.Indexer
}

// NewKuberhealthyJobLister returns a new KuberhealthyJobLister.
func NewKuberhealthyJobLister(indexer cache.Indexer) KuberhealthyJobLister {
	return &kuberhealthyJobLister{indexer: indexer}
}

// List lists all KuberhealthyJobs in the indexer.
func (s *kuberhealthyJobLister) List(selector labels.Selector) (ret []*v1.KuberhealthyJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyJob))
	})
	return ret, err
}

// KuberhealthyJobs returns an object that can list and get KuberhealthyJobs.
func (s *kuberhealthyJobLister) KuberhealthyJobs(namespace string) KuberhealthyJobNamespaceLister {
	return kuberhealthyJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KuberhealthyJobNamespaceLister helps list and get KuberhealthyJobs.
// All objects returned here must be treated as read-only.
type KuberhealthyJobNamespaceLister interface {
	// List lists all KuberhealthyJobs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.KuberhealthyJob, err error)
	// Get retrieves the KuberhealthyJob from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.KuberhealthyJob, error)
	KuberhealthyJobNamespaceListerExpansion
}

// kuberhealthyJobNamespaceLister implements the KuberhealthyJobNamespaceLister
// interface.
type kuberhealthyJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KuberhealthyJobs in the indexer for a given namespace.
func (s kuberhealthyJobNamespaceLister) List(selector labels.Selector) (ret []*v1.KuberhealthyJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.KuberhealthyJob))
	})
	return ret, err
}

// Get retrieves the KuberhealthyJob from the indexer for a given namespace and name.
func (s kuberhealthyJobNamespaceLister) Get(name string) (*v1.KuberhealthyJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("kuberhealthyjob"), name)
	}
	return obj.(*v1.KuberhealthyJob), nil
}
